<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Github on Electronic Lab Notebook</title>
    <link>/tags/github/</link>
    <description>Recent content in Github on Electronic Lab Notebook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>your@email.com (Your Name)</managingEditor>
    <webMaster>your@email.com (Your Name)</webMaster>
    <copyright>(c) 2018 -- All rights reserved.</copyright>
    <lastBuildDate>Tue, 09 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/github/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using the blogdown framework for electronic notebooking</title>
      <link>/posts/using-the-blogdown-framework-for-electronic-notebooking/</link>
      <pubDate>Tue, 09 Jan 2018 00:00:00 +0000</pubDate>
      <author>your@email.com (Your Name)</author>
      <guid>/posts/using-the-blogdown-framework-for-electronic-notebooking/</guid>
      <description>With a combination of fantastic software we are able to produce an extensible and reproducible electronic lab notebook! Below I will document the process I used to set up and modify a blogdown workflow to create a framework for electronic lab notebooking.
Links to the tools 




  1. RStudio  RStudio is an integrated development environment (IDE) for R. It includes a console, syntax-highlighting editor that supports direct code execution, as well as tools for plotting, history, debugging and workspace management.</description>
    </item>
    
  </channel>
</rss>