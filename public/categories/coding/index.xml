<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Coding on Electronic Lab Notebook</title>
    <link>/categories/coding/</link>
    <description>Recent content in Coding on Electronic Lab Notebook</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>your@email.com (Your Name)</managingEditor>
    <webMaster>your@email.com (Your Name)</webMaster>
    <copyright>(c) 2018 -- All rights reserved.</copyright>
    <lastBuildDate>Wed, 04 Apr 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/coding/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Interactive data tables in RMarkdown with DT</title>
      <link>/posts/interactive-data-tables-in-rmarkdown-with-dt/</link>
      <pubDate>Wed, 04 Apr 2018 00:00:00 +0000</pubDate>
      <author>your@email.com (Your Name)</author>
      <guid>/posts/interactive-data-tables-in-rmarkdown-with-dt/</guid>
      <description>DT: An R interface to the DataTables library We can use the R package DT to render interactive (and pretty) table in HTML. From the RStudio documentation:
 The R package DT provides an R interface to the JavaScript library DataTables. R data objects (matrices or data frames) can be displayed as tables on HTML pages, and DataTables provides filtering, pagination, sorting, and many other features in the tables.</description>
    </item>
    
    <item>
      <title>Interactive timelines with timevis</title>
      <link>/posts/interactive-timelines-with-timevis/</link>
      <pubDate>Wed, 04 Apr 2018 00:00:00 +0000</pubDate>
      <author>your@email.com (Your Name)</author>
      <guid>/posts/interactive-timelines-with-timevis/</guid>
      <description>An example timeline created with the R package timevis. + -   {&#34;x&#34;:{&#34;items&#34;:[{&#34;id&#34;:&#34; 1&#34;,&#34;content&#34;:&#34;Start&#34;,&#34;start&#34;:&#34;2018-01-15&#34;,&#34;group&#34;:&#34;3&#34;,&#34;type&#34;:&#34;box&#34;,&#34;style&#34;:&#34;color: black;&#34;,&#34;editable&#34;:&#34;TRUE&#34;,&#34;fit&#34;:&#34;TRUE&#34;},{&#34;id&#34;:&#34; 2&#34;,&#34;content&#34;:&#34;&#34;,&#34;start&#34;:&#34;2018-02-15&#34;,&#34;end&#34;:&#34;2018-10-07&#34;,&#34;group&#34;:&#34;1&#34;,&#34;type&#34;:&#34;background&#34;,&#34;style&#34;:&#34;color: cadetblue;&#34;,&#34;editable&#34;:&#34;TRUE&#34;,&#34;fit&#34;:&#34;TRUE&#34;},{&#34;id&#34;:&#34; 3&#34;,&#34;content&#34;:&#34;Research Proposal&#34;,&#34;start&#34;:&#34;2018-02-15&#34;,&#34;end&#34;:&#34;2018-03-28&#34;,&#34;group&#34;:&#34;1&#34;,&#34;type&#34;:&#34;range&#34;,&#34;style&#34;:&#34;color: cadetblue;&#34;,&#34;editable&#34;:&#34;TRUE&#34;,&#34;fit&#34;:&#34;TRUE&#34;},{&#34;id&#34;:&#34; 4&#34;,&#34;content&#34;:&#34;Obj 1. Phenotype Data QC &amp; Analysis&#34;,&#34;start&#34;:&#34;2018-03-29&#34;,&#34;end&#34;:&#34;2018-05-07&#34;,&#34;group&#34;:&#34;2&#34;,&#34;type&#34;:&#34;range&#34;,&#34;style&#34;:&#34;color: darkred;&#34;,&#34;editable&#34;:&#34;TRUE&#34;,&#34;fit&#34;:&#34;TRUE&#34;},{&#34;id&#34;:&#34; 5&#34;,&#34;content&#34;:&#34;Obj 2. Gneotype Data QC &amp; Annotation&#34;,&#34;start&#34;:&#34;2018-05-01&#34;,&#34;end&#34;:&#34;2018-05-28&#34;,&#34;group&#34;:&#34;2&#34;,&#34;type&#34;:&#34;range&#34;,&#34;style&#34;:&#34;color: darkred;&#34;,&#34;editable&#34;:&#34;TRUE&#34;,&#34;fit&#34;:&#34;TRUE&#34;},{&#34;id&#34;:&#34; 6&#34;,&#34;content&#34;:&#34;Obj 3. Heritability Analysis&#34;,&#34;start&#34;:&#34;2018-05-28&#34;,&#34;end&#34;:&#34;2018-06-12&#34;,&#34;group&#34;:&#34;2&#34;,&#34;type&#34;:&#34;range&#34;,&#34;style&#34;:&#34;color: darkred;&#34;,&#34;editable&#34;:&#34;TRUE&#34;,&#34;fit&#34;:&#34;TRUE&#34;},{&#34;id&#34;:&#34; 7&#34;,&#34;content&#34;:&#34;Obj 4. Pedigree-based GWAS&#34;,&#34;start&#34;:&#34;2018-06-12&#34;,&#34;end&#34;:&#34;2018-07-28&#34;,&#34;group&#34;:&#34;2&#34;,&#34;type&#34;:&#34;range&#34;,&#34;style&#34;:&#34;color: darkred;&#34;,&#34;editable&#34;:&#34;TRUE&#34;,&#34;fit&#34;:&#34;TRUE&#34;},{&#34;id&#34;:&#34; 8&#34;,&#34;content&#34;:&#34;Obj 5. Machine-learning GWAS&#34;,&#34;start&#34;:&#34;2018-07-28&#34;,&#34;end&#34;:&#34;2018-09-20&#34;,&#34;group&#34;:&#34;2&#34;,&#34;type&#34;:&#34;range&#34;,&#34;style&#34;:&#34;color: darkred;&#34;,&#34;editable&#34;:&#34;TRUE&#34;,&#34;fit&#34;:&#34;TRUE&#34;},{&#34;id&#34;:&#34; 9&#34;,&#34;content&#34;:&#34;Finish&#34;,&#34;start&#34;:&#34;2018-11-01&#34;,&#34;group&#34;:&#34;3&#34;,&#34;type&#34;:&#34;box&#34;,&#34;style&#34;:&#34;color: black;&#34;,&#34;editable&#34;:&#34;TRUE&#34;,&#34;fit&#34;:&#34;TRUE&#34;},{&#34;id&#34;:&#34;10&#34;,&#34;content&#34;:&#34;&#34;,&#34;start&#34;:&#34;2018-03-29&#34;,&#34;end&#34;:&#34;2018-09-20&#34;,&#34;group&#34;:&#34;2&#34;,&#34;type&#34;:&#34;background&#34;,&#34;style&#34;:&#34;color: darkred;&#34;,&#34;editable&#34;:&#34;TRUE&#34;,&#34;fit&#34;:&#34;TRUE&#34;},{&#34;id&#34;:&#34;11&#34;,&#34;content&#34;:&#34;Hand-in&#34;,&#34;start&#34;:&#34;2018-10-07&#34;,&#34;group&#34;:&#34;3&#34;,&#34;type&#34;:&#34;box&#34;,&#34;style&#34;:&#34;color: black;&#34;,&#34;editable&#34;:&#34;TRUE&#34;,&#34;fit&#34;:&#34;TRUE&#34;}],&#34;groups&#34;:[{&#34;id&#34;:&#34;1&#34;,&#34;content&#34;:&#34;Writing&#34;},{&#34;id&#34;:&#34;2&#34;,&#34;content&#34;:&#34;Analysis&#34;},{&#34;id&#34;:&#34;3&#34;,&#34;content&#34;:&#34;Admin&#34;}],&#34;showZoom&#34;:true,&#34;zoomFactor&#34;:0.5,&#34;fit&#34;:true,&#34;options&#34;:[],&#34;height&#34;:250,&#34;api&#34;:[]},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}
The code to generate the above timeline:</description>
    </item>
    
    <item>
      <title>Performing simple linear regressions in R</title>
      <link>/posts/performing-simple-linear-regressions-in-r/</link>
      <pubDate>Wed, 28 Mar 2018 00:00:00 +0000</pubDate>
      <author>your@email.com (Your Name)</author>
      <guid>/posts/performing-simple-linear-regressions-in-r/</guid>
      <description>Linear regression We will use the mtcars data, specifically the miles per gallon (mpg) versus the weight (wt) - we obviously expect to see a strong association between these two variables.
fit &amp;lt;- lm(mpg~wt, data=mtcars) summary(fit) ## ## Call: ## lm(formula = mpg ~ wt, data = mtcars) ## ## Residuals: ## Min 1Q Median 3Q Max ## -4.5432 -2.3647 -0.1252 1.4096 6.8727 ## ## Coefficients: ## Estimate Std. Error t value Pr(&amp;gt;|t|) ## (Intercept) 37.</description>
    </item>
    
    <item>
      <title>Integrating Python into your R code with reticulate</title>
      <link>/posts/integrating-python-into-your-r-code-with-reticulate/</link>
      <pubDate>Tue, 27 Mar 2018 00:00:00 +0000</pubDate>
      <author>your@email.com (Your Name)</author>
      <guid>/posts/integrating-python-into-your-r-code-with-reticulate/</guid>
      <description>The recent introduction of the R package reticulate now allows for the seemless integration of Python coding into an R workflow. Here Iâ€™ll provide a very simple, quick example using reticulate in an RMarkdown document within RStudio, for further detail see https://github.com/rstudio/reticulate#python-in-r-markdown.
Setting up Install the reticulate package:
install.packages(&amp;#39;reticulate&amp;#39;)  Running Python within an R chunk We can now directly import packages within an R chunk in RMarkdown:
require(reticulate) # load reticulate package os &amp;lt;- import(&amp;quot;os&amp;quot;) # import os os$listdir(&amp;quot;.</description>
    </item>
    
  </channel>
</rss>